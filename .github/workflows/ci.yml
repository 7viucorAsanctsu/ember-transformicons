name: CI

on:
  pull_request:
  push:
    # filtering branches here prevents duplicate builds from pull_request and push
    branches:
      - master
      - 'v*'
    # always run CI for tags
    tags:
      - '*'
  # early issue detection: run CI weekly on Sundays
  schedule:
  - cron:  '0 6 * * 0'

env:
  CI: true

jobs:
  test-locked-deps:
    name: Locked Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 8
      - name: Install Dependencies
        run: yarn install --non-interactive
      - name: Lint HBS
        run: yarn lint:hbs
      - name: Lint JS
        run: yarn lint:js
      - name: Browser Tests
        run: yarn test

  test-floating-deps:
    name: Floating Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 8
      - name: Install Dependencies
        run: yarn install --no-lockfile --non-interactive
      - name: Browser Tests
        run: yarn test

  test-ember-try:
    name: Ember Try
    runs-on: ubuntu-latest
    needs: [test-locked-deps, test-floating-deps]
    strategy:
      matrix:
        scenario:
         - ember-3.13
         - ember-release
         - ember-beta
         - ember-canary
         - ember-default-with-jquery
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 8
      - name: Install Dependencies
        run: yarn install --no-lockfile --non-interactive
      - name: Scenario
        run: yarn ember try:one ${{ matrix.scenario }}

  # deploy-prod:
  #   name: Production Deploy
  #   runs-on: ubuntu-latest
  #   needs: [test-ember-try]
  #   if: (branch = master OR tag IS present) AND type = push
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v1
  #     - name: Install Node
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 8
  #     - name: Install Dependencies
  #       run: yarn install --no-lockfile --non-interactive
  #     - name: Deploy
  #       run: yarn ember deploy production

  # publish-npm:
  #   name: NPM Publish
  #   runs-on: ubuntu-latest
  #   needs: [deploy-prod]
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v1
  #     - name: Install Node
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 8
  #         registry-url: https://registry.npmjs.org/
  #     - name: Publish
  #       run: npm publish --dry-run
  #       env:
  #         NODE_AUTH_TOKEN: ${{secrets.npm_token}}